# ðŸ“Œ House Price Prediction using Linear Regression

# Step 1: Import Libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Step 2: Create a Sample Dataset (You can replace with real dataset CSV)
data = {
    'Area': [2600, 3000, 3200, 3600, 4000, 4100, 3000, 2800, 3500, 5000],
    'Bedrooms': [3, 4, 3, 3, 5, 4, 3, 2, 4, 5],
    'Age': [20, 15, 18, 30, 8, 5, 12, 25, 10, 2],
    'Price': [550000, 565000, 610000, 595000, 760000, 810000, 590000, 570000, 680000, 1000000]
}
df = pd.DataFrame(data)

# Step 3: Explore Data
print("First 5 rows of dataset:\n", df.head())
print("\nDataset Info:\n")
print(df.info())

# Visualization
sns.pairplot(df, x_vars=['Area', 'Bedrooms', 'Age'], y_vars='Price', height=4, aspect=1, kind='scatter')
plt.show()

# Step 4: Feature Selection
X = df[['Area', 'Bedrooms', 'Age']]  # independent variables
y = df['Price']  # dependent variable

# Step 5: Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 6: Model Training
model = LinearRegression()
model.fit(X_train, y_train)

# Step 7: Prediction
y_pred = model.predict(X_test)

# Step 8: Model Evaluation
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("\nðŸ“Š Model Evaluation:")
print("Mean Squared Error:", mse)
print("RÂ² Score:", r2)

# Step 9: Compare Actual vs Predicted
comparison = pd.DataFrame({'Actual Price': y_test, 'Predicted Price': y_pred})
print("\nComparison of Actual vs Predicted:\n", comparison)

# Step 10: Visualization
plt.scatter(y_test, y_pred, color='blue')
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--')  # line of perfect prediction
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual vs Predicted House Prices")
plt.show()
